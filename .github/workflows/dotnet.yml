name: .NET CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build, Test, and Sonar Analysis
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./Source/Back-end # Or you can use windows-latest for Windows-based builds

    steps:

    # Step 1: Set up JDK 17 (required for SonarCloud)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu'

    # Step 2: Checkout code
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Step 3: Cache dependencies
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: ${{ runner.os }}-nuget-

    # Step 4: Install dependencies
    - name: Install dependencies
      run: dotnet restore osu.sln
      
    - name: Build the project
      run: dotnet build --configuration Release

    - name: Run tests with coverage
      run: |
        dotnet test --configuration Release --collect:"XPlat Code Coverage"

    - name: Install SonarCloud Scanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Prepare SonarCloud analysis
      run: dotnet-sonarscanner begin /k:"TestProjectKeySchool" /o:"ipipboy029" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.coverageReportPaths="**/coverage.cobertura.xml"

    - name: Run the build again (required for SonarCloud)
      run: dotnet build --configuration Release

    - name: Run tests (to generate coverage report)
      run: dotnet test --configuration Release

    - name: End SonarCloud analysis
      run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      
  deploy:
    name: Deploy with Watchtower
    runs-on: ubuntu-latest
    steps:
      - name: Pull and deploy using Watchtower
        run: |
          docker run -d --name watchtower \
          -v /var/run/docker.sock:/var/run/docker.sock \
          containrrr/watchtower --interval 300 --cleanup
