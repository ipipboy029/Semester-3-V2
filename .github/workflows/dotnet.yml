name: .NET CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Or you can use windows-latest for Windows-based builds

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0'  # Make sure this matches the version of .NET you are using

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet build --configuration Release

    - name: Run tests with coverage
      run: |
        dotnet test --configuration Release --collect:"XPlat Code Coverage"

    - name: Install SonarCloud Scanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Prepare SonarCloud analysis
      run: dotnet-sonarscanner begin /k:"TestProjectKeySchool" /o:"ipipboy029" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.coverageReportPaths="**/coverage.cobertura.xml"

    - name: Run the build again (required for SonarCloud)
      run: dotnet build --configuration Release

    - name: Run tests (to generate coverage report)
      run: dotnet test --configuration Release

    - name: End SonarCloud analysis
      run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      
  deploy:
    name: Deploy with Watchtower
    runs-on: ubuntu-latest
    steps:
      - name: Pull and deploy using Watchtower
        run: |
          docker run -d --name watchtower \
          -v /var/run/docker.sock:/var/run/docker.sock \
          containrrr/watchtower --interval 300 --cleanup
