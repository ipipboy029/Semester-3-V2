name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./Source/Front-end/osuapi

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    # Set up Node.js environment
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    # Install dependencies
    - run: npm ci

    # Build the project (if needed)
    - run: npm run build --if-present

    # Set up JDK 17 (Temurin distribution)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Set JAVA_HOME for SonarCloud (using the set up Java)
    - name: Set JAVA_HOME for SonarCloud
      run: echo "JAVA_HOME=${{ steps.setup-java.outputs.java-home }}" >> $GITHUB_ENV

    # Run SonarCloud analysis
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v1
      with:
        entryPoint: "sonar-scanner"  # This will trigger the SonarScanner with default arguments
        args: "-Dsonar.projectKey=TestProjectKeySchool -Dsonar.organization=ipipboy029 -Dsonar.projectName=osuapi -Dsonar.projectBaseDir=."  # Replace with your project details
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        JAVA_HOME: ${{ env.JAVA_HOME }}  # Make sure Java is available for SonarCloud

    # Optionally, run tests after the SonarCloud scan if needed
    # - run: npm test
