name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./Source/Front-end/osuapi

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    # Set up Node.js environment
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    # Install dependencies
    - run: npm ci

    # Build the project (if needed)
    - run: npm run build --if-present

    # Set up JDK 17 (Temurin distribution)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Check Java Version (optional but useful for debugging)
    - name: Check Java Version
      run: java -version

    # Run SonarCloud Scan with JAVA_HOME set to JDK 17
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v1
      with:
        args: |
          -Dsonar.projectKey=TestProjectKeySchool
          -Dsonar.organization=ipipboy029
          -Dsonar.projectName=osuapi
          -Dsonar.projectBaseDir=./Source/Front-end/osuapi
          -Dsonar.sources=src
          -Dsonar.tests=src/tests
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov-report/index-lcov-report.json
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}  # Ensure the correct JAVA_HOME is set
        SONAR_HOST_URL: "https://sonarcloud.io"
        SONAR_SCANNER_JAVA_OPTS: -Djava.home=${{ steps.setup-java.outputs.java-home }} # Set Java home for the scanner

    # Optionally, run tests after the SonarCloud scan if needed
    # - run: npm test
